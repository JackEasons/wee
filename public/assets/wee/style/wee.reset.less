// Wee 2.0.0 (weepower.com)
// Licensed under Apache 2 (http://www.apache.org/licenses/LICENSE-2.0)
// DO NOT MODIFY THIS FILE

* {
	&,
	&:before,
	&:after {
		margin: 0;
		outline: 0;
		padding: 0;
		.border-box();
	}
}
.wee-container-min-width () when not (@minWidth = 0)
		and not (@minWidth = false) {
	html,
	body {
		.min-width(@minWidth);
	}
}
.wee-container-min-width();
html {
	-ms-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
	font-family: '"1"';
	.font-size(@rootFontSize);
}
body {
	color: @baseColor;
	position: relative;
	.font(@baseFont; @baseFontSize; @baseFontWeight);
	.line-height(@baseLineHeight);
	.wee-body-background () when not (@bodyBackground = false) {
		.background();
	}
	.wee-body-background();
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
	display: block;
}
embed,
img,
object {
	max-width: 100%;
}
embed,
object {
	height: 100%;
}
audio,
canvas,
video {
	display: inline-block;
}
.wee-abbr () when not (@abbrUnderline = none) {
	.border(bottom; @baseColor; 1px; @abbrUnderline);
}
abbr[title] {
	cursor: help;
	.wee-abbr();
}
b,
strong,
.bold {
	font-weight: @boldFontWeight;
}
mark {
	color: @markColor;
	.background(@markBackground);
}
canvas {
	-ms-touch-action: double-tap-zoom;
}
iframe {
	.spaced()
}
.wee-figure () {
	text-align: center;
	position: relative;
	.padding(@figurePadding);
	.spaced();
	img {
		.spaced();
	}
	figcaption {
		color: @figCaptionColor;
		font-style: @figCaptionFontStyle;
		.line-height(@figCaptionLineHeight);
	}
}
.wee-figure () when not (@figureRounded = 0)
		and not (@figureRounded = false) {
	.rounded(@figureRounded);
}
.wee-figure () when not (@figureBorderColor = false) {
	.border(@figureBorderColor);
}
figure {
	.wee-figure();
}
img {
	-ms-interpolation-mode: bicubic;
	display: inline-block;
}
sub,
sup {
	font-size: .6em;
	line-height: 0;
	margin-left: .3em;
	position: relative;
	vertical-align: baseline;
}
sub {
	bottom: -.25em;
}
sup {
	top: -1em;
}
::-moz-selection {
	.selection();
}
::selection {
	.selection();
}

////////////////
// Typography //
////////////////

h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6,
.heading {
	color: @headingColor;
	font-family: @headingFont;
	font-weight: @headingFontWeight;
	.line-height(@headingLineHeight);
	.spaced(@headingMarginBottom);
	small {
		font-weight: normal;
	}
}
h1,
.h1 {
	.font-size(@h1);
}
h2,
.h2 {
	.font-size(@h2);
}
h3,
.h3 {
	.font-size(@h3);
}
h4,
.h4 {
	.font-size(@h4);
}
h5,
.h5 {
	.font-size(@h5);
}
h6,
.h6 {
	.font-size(@h6);
}
.subheading {
	color: @subHeadingColor;
	font-weight: @subHeadingFontWeight;
}
p {
	color: @paragraphColor;
	font-weight: @paragraphFontWeight;
	.line-height(@paragraphLineHeight);
	.spaced(@paragraphMarginBottom);
}
small {
	.font-size(@smallFontSize);
}
dfn,
em,
i,
var,
.italic {
	font-style: italic;
}
blockquote,
q {
	color: @quoteColor;
	.font(@quoteFont; @quoteFontSize; @quoteFontWeight; @quoteLineHeight; @quoteFontStyle);
	cite {
		color: @citeColor;
		.font(@citeFont; @citeFontSize; @citeFontWeight; @citeLineHeight; @citeFontStyle);
		.margin(top; @citeMarginTop);
		&:before {
			.content(@citeIndicator);
		}
	}
	p {
		color: @quoteColor;
	}
}
.wee-blockquote () {
	.padding(@quotePaddingVertical; @quotePaddingHorizontal);
	.spaced();
	cite {
		display: block;
	}
}
.wee-blockquote () when not (@quoteBorderWidth = 0)
		and not (@quoteBorderWidth = false) {
	.border(left; @quoteBorderColor; @quoteBorderWidth);
}
blockquote,
.blockquote {
	.wee-blockquote();
}
del,
s,
strike {
	text-decoration: line-through;
}
a {
	color: @linkColor;
	outline: 0;
	text-decoration: @linkDecoration;
	&:focus {
		outline: thin dotted;
	}
	&:hover {
		color: @linkColorHover;
		.check () when not (@linkDecorationHover = false) {
			text-decoration: @linkDecorationHover;
		}
		.check();
	}
	&:active {
		color: @linkColorActive;
	}
	img {
		border: 0;
	}
}
hr,
.hr {
	border: 0;
	display: block;
	height: 1px;
	.border(top; @ruleColor; @ruleHeight; @ruleStyle);
	.margin(vertical; @ruleMargin);
}
address {
	color: @addressColor;
	.font(@addressFont; @addressFontSize; @addressFontWeight; @addressLineHeight; @addressFontStyle);
	.spaced();
}

///////////
// Lists //
///////////

dl,
ol,
ul {
	color: @listColor;
	list-style-position: @listBulletPosition;
	.line-height(@listLineHeight);
	.spaced(@listMarginBottom);
	.check () when not (@liMarginBottom = false) {
		li {
			.spaced(@liMarginBottom);
		}
	}
	.check();
}
.wee-list-margin () when not (@listMarginLeft = 0)
		and not (@listMarginLeft = false) {
	.margin(left; @listMarginLeft);
}
ol,
ul {
	.wee-list-margin();
	ol,
	ul {
		margin-bottom: 0;
		.margin(left; @nestedListMarginLeft);
	}
}
ul {
	list-style-type: @listBulletStyle;
	ul {
		list-style-type: circle;
		ul {
			list-style-type: square;
		}
	}
}
ol {
	list-style-type: decimal;
}
nav {
	ol,
	ul {
		margin: 0;
		list-style: none;
		li {
			margin-bottom: 0;
		}
	}
}
dl {
	.spaced(@dlMarginBottom);
}
dt {
	color: @dtColor;
	.font(@dtFont; @dtFontSize);
	.spaced(@dtMarginBottom);
}
dd {
	color: @ddColor;
	.font(@ddFont; @ddFontSize);
	.spaced(@ddMarginBottom);
}